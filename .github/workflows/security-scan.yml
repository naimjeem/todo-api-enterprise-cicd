name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * *' # Run daily at 2 AM
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # SAST (Static Application Security Testing)
  sast-scan:
    name: SAST Security Scan
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Semgrep SAST
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/javascript
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json
          HIGH_VULNS=$(cat audit-results.json | jq '.vulnerabilities | to_entries | map(select(.value.severity == "high")) | length')
          if [ "$HIGH_VULNS" -gt 0 ]; then
            echo "❌ Found $HIGH_VULNS HIGH severity vulnerabilities"
            cat audit-results.json | jq '.vulnerabilities | to_entries | map(select(.value.severity == "high"))'
            exit 1
          fi
          echo "✅ No HIGH severity vulnerabilities found"

  # Dependency Scanning
  dependency-scan:
    name: Dependency Security Scan
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'todo-api'
          path: '.'
          format: 'SARIF'
          args: >
            --enableRetired
            --enableExperimental
            --failOnCVSS 7

  # Container Security Scanning
  container-security:
    name: Container Security Scan
    runs-on: self-hosted
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t todo-api:security-scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'todo-api:security-scan'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      - name: Run Docker Scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: todo-api:security-scan
          only-severities: high,critical
          exit-code: true

  # License Compliance Check
  license-check:
    name: License Compliance Check
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run license check
        run: |
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense' --excludePrivatePackages

  # Security Headers Check
  security-headers:
    name: Security Headers Check
    runs-on: self-hosted
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start application
        run: |
          npm start &
          sleep 10

      - name: Check security headers
        run: |
          curl -I http://localhost:3000/health | grep -E "(X-Content-Type-Options|X-Frame-Options|X-XSS-Protection|Strict-Transport-Security)" || exit 1
          echo "✅ Security headers present"

      - name: Cleanup
        if: always()
        run: pkill -f "npm start" || true
