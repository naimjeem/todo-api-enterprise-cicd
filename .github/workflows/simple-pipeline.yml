name: CI/CD Pipeline

on:
  release:
    types: [published]

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/todo-backend

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  build:
    runs-on: self-hosted
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Build & Push Backend
        run: |
          docker build -t $BACKEND_IMAGE:${{ env.RELEASE_VERSION }} .
          docker push $BACKEND_IMAGE:${{ env.RELEASE_VERSION }}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Update .env with new RELEASE_VERSION
        run: |
          echo "Setting RELEASE_VERSION=${{ env.RELEASE_VERSION }} in .env"
          touch .env
          grep -v '^RELEASE_VERSION=' .env > .env.tmp || true
          echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> .env.tmp
          mv .env.tmp .env
          echo "Final .env:"
          cat .env
      - name: Deploy locally with Docker Compose
        run: |
          docker compose pull
          docker compose up -d